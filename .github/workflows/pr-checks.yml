name: Pull Request Checks

on:
  pull_request_target:
    types: [assigned, opened, synchronize, reopened, edited]

permissions:
  contents: read
  pull-requests: read

env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  validate-title:
    name: Validate PR title
    runs-on: ubuntu-22.04
    steps:
      - name: Run semantic-pull-request
        uses: amannn/action-semantic-pull-request@v5
        with:
          # Ensure the subject does not start with an uppercase letter
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            doesn't start with an uppercase character.

  validate-version:
    if: ${{ github.base_ref == 'main' }}
    name: Validate version update
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Check app directory for changes
        id: changed_files
        uses: tj-actions/changed-files@v46
        with:
          files: app/**

      - name: Check if version is updated
        if: steps.changed_files.outputs.any_changed == 'true'
        run: |
          regex="^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(\\-[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?(\\+[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?$"
          current_version=$(git describe --tags --abbrev=0)
          package_version=$(cat ./app/package.json \
            | grep version \
            | head -1 \
            | awk -F: '{ print $2 }' \
            | sed 's/[",]//g' \
            | tr -d " \t\n\r")
          package_lock_version=$(cat ./app/package-lock.json \
            | grep version \
            | head -1 \
            | awk -F: '{ print $2 }' \
            | sed 's/[",]//g' \
            | tr -d " \t\n\r")

          fileArray=("package.json" "package-lock.json")
          versionArray=("$package_version" "$package_lock_version")

          echo "Current version: $current_version"
          for i in "${!fileArray[@]}"; do
            echo "${fileArray[$i]}: ${versionArray[$i]}"
          done

          for i in "${!versionArray[@]}"; do
            if [[ ! ${versionArray[$i]} =~ $regex ]]; then
              echo "ERROR: version in ${fileArray[$i]} is not in semver format"
              failed=true
            fi

            if [[ ${versionArray[$i]} == "$current_version" ]]; then
              echo "ERROR: version in ${fileArray[$i]} must be updated"
              failed=true
            fi
          done

          if [[ $failed ]]; then
            exit 1
          fi
